<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>com.alibaba.platform.app</groupId>
		<artifactId>doris.admin.parent</artifactId>
		<version>0.1.4</version>
	    <relativePath>../pom.xml</relativePath>
	</parent>	

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.alibaba.platform.app</groupId>
	<artifactId>doris.admin.deploy</artifactId>
	<name>doris.admin.deploy</name>
	<packaging>jar</packaging>
	
	<properties>
		<autoconfig-version>1.0.5</autoconfig-version>
		<springext-plugin-version>1.0</springext-plugin-version>
		<jetty-version>6.1.22</jetty-version>
	</properties>
	
	
	<dependencies>
		<dependency>
			<groupId>com.alibaba.platform.app</groupId>
			<artifactId>doris.admin.bundle.war</artifactId>
			<scope>runtime</scope>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <index>true</index>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <version>${project.version}</version>
                            <timestamp>${timestamp}</timestamp>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            
            <!-- Copy war artifact -->
            <plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<id>copy-war</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.alibaba.platform.app</groupId>
									<artifactId>doris.admin.bundle.war</artifactId>
									<version>${project.version}</version>
									<type>war</type>
                                    <outputDirectory>${project.build.directory}/doris-admin.war</outputDirectory>
                                </artifactItem>
                            </artifactItems>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
            
            <plugin>
                <groupId>com.alibaba.maven.plugins</groupId>
                <artifactId>maven-intl-plugin</artifactId>
                <executions>
                    <execution>
                        <id>merge-local-parent</id>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                    </execution>
                    <!-- generate META-INF/MANIFEST.MF -->
                    <execution>
                        <id>generate-manifest</id>
                        <goals>
                            <goal>manifest-gen</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-deploy-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <chmod dir="${project.basedir}/bin" perm="755" includes="**"/>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <!-- 这是最新版本，推荐使用这个版本 -->
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>assemble</id>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <attach>false</attach>
                </configuration>
            </plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>release</id>
			<activation>
	       	    <property>
	                <name>env</name>
	                <value>release</value>
	             </property>
             </activation>

              <build>
                  <plugins>
                      <plugin>
                          <artifactId>maven-assembly-plugin</artifactId>
                          <configuration>
         					<!-- 发布模式使用的maven assembly插件描述文件 -->
                              <descriptors>
                                  <descriptor>src/assemble/release.xml</descriptor>
                              </descriptors>
					<!-- 如果一个应用的包含多个deploy模块，如果使用同样的包名，
					     如果把它们复制的一个目录中可能会失败，所以包名加了
					     artifactId以示区分                                   -->
					<finalName>${project.artifactId}</finalName>
					<!-- scm要求 release 模式打出的包放到顶级目录下的target子目录中 -->
                                        <outputDirectory>${project.parent.build.directory}</outputDirectory>
                                    </configuration>
                                </plugin>
                            </plugins>
                        </build>

		</profile>
		<!-- Dev profile will configure all files and copy them to target/dev, for testing purpose -->
		<profile>
			<id>dev</id>
			<activation>
				<property>
					<name>env</name>
					<value>!release</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <!-- maven assembly插件需要一个描述文件
                                        来告诉插件包的结构以及打包所需的文件来自哪里 -->
                            <descriptors>
                                <descriptor>${basedir}/src/assemble/dev.xml</descriptor>
                            </descriptors>
                            <finalName>${project.artifactId}</finalName>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>
					<!-- do auto config for integration test -->
					<plugin>
						<groupId>com.alibaba.maven.plugins</groupId>
						<artifactId>maven-autoconf-plugin</artifactId>
						<version>0.3-alpha-9</version>
						<executions>
							<execution>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>config</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<destFiles>
								<destFile>${project.basedir}</destFile>
							</destFiles>
							<includeDescriptorPatterns>
								<!-- intl-site flavor -->
								<includeDescriptorPattern>autoconf/auto-config.xml</includeDescriptorPattern>
								<!-- china-site flavor -->
								<includeDescriptorPattern>conf/META-INF/autoconf/auto-config.xml</includeDescriptorPattern>
							</includeDescriptorPatterns>
                            <includePackagePatterns>
                                <includePackagePattern>**/*.war</includePackagePattern>
                            </includePackagePatterns>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
